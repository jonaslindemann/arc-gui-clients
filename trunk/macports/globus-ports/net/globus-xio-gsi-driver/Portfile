# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

# $Id$

if {$build_arch == "x86_64" || $build_arch == "ppc64"} {
    set flavor gcc64pthr
} else {
    set flavor gcc32pthr
}

PortSystem              1.0

name                    globus-xio-gsi-driver
set _name               [ string map {"-" "_"} $name ]
version                 2.3
revision                1
platforms               darwin
categories              net
license                 Apache-2
maintainers             nikhef.nl:dennsivd fysast.uu.se:mattias.ellert nbi.ku.dk:skou
homepage                http://www.globus.org/

description             Globus Toolkit - Globus XIO GSI Driver
long_description        The Globus Toolkit is an open source software \
                        toolkit used for building Grid systems and \
                        applications. It is being developed by the \
                        Globus Alliance and many others all over the \
                        world. A growing number of projects and \
                        companies are using the Globus Toolkit to \
                        unlock the potential of grids for their \
                        cause. The ${name} package contains: \
                        Globus XIO GSI Driver

master_sites            http://www.globus.org/ftppub/gt5/5.2/5.2.4/packages/src/

distfiles               ${_name}-${version}.tar.gz

checksums               ${_name}-${version}.tar.gz \
                            sha256 9613dbb6f2bab785b4507321a75c0999e37e1495c14568878dfa0ee2d428f692 \
                            rmp160 62b7d6c2543d9936efd11a2cdf9c97034d0b5ea1

depends_run             port:globus-gss-assist \
                        port:globus-gssapi-error \
                        port:globus-gssapi-gsi \
                        port:globus-xio

depends_build           port:grid-packaging-tools \
                        port:globus-gssapi-error \
                        port:globus-gss-assist \
                        port:globus-xio \
                        port:globus-gssapi-gsi \
                        bin:doxygen:doxygen \
                        bin:dot:graphviz \
                        bin:gs:ghostscript \
                        bin:pdflatex:texlive-latex

worksrcdir              ${_name}-${version}

configure.env-append    GPT_LOCATION=${prefix} \
                        GLOBUS_LOCATION=${prefix}

configure.post_args     --with-flavor=${flavor} --enable-doxygen \
                        --with-docdir='\${datadir}/doc/${name}-${version}'

build.env-append        GPT_LOCATION=${prefix} \
                        GLOBUS_LOCATION=${prefix}

pre-configure {
    # Remove files that should be replaced during bootstrap
    eval file delete -force \
        [ glob -nocomplain ${worksrcpath}/doxygen/Doxyfile* ] dummy
    file delete -force ${worksrcpath}/doxygen/Makefile.am
    file delete -force ${worksrcpath}/pkgdata/Makefile.am
    eval file delete -force \
        [ glob -nocomplain ${worksrcpath}/globus_automake* ] dummy
    file delete -force ${worksrcpath}/autom4te.cache

    system "cd $worksrcpath && \
        GPT_LOCATION=${prefix} GLOBUS_LOCATION=${prefix} \
        ${prefix}/share/globus/globus-bootstrap.sh"
}

post-destroot {
    # This library is opened using lt_dlopenext, so the libtool archives
    # (.la files) can not be removed

    # Remove static libraries (.a files)
    foreach file [ exec find ${destroot}/${prefix}/lib -name "lib*.a" ] {
        delete $file
    }
}
