diff -ur globus_core-5.15.orig/config/accompiler.m4 globus_core-5.15/config/accompiler.m4
--- globus_core-5.15.orig/config/accompiler.m4	2009-06-02 20:25:05.000000000 +0200
+++ globus_core-5.15/config/accompiler.m4	2009-06-02 20:27:36.000000000 +0200
@@ -451,6 +451,33 @@
         fi
         CC="$lac_cv_CC"
         ;;
+    s390x-*-linux* )
+        if test "$GLOBUS_CC" = "mpicc"; then
+            AC_PATH_PROGS(lac_cv_CC,  $CC  mpicc)
+            AC_PATH_PROGS(lac_cv_CXX, $CXX mpicxx mpic++ mpiCC)
+            AC_PATH_PROGS(lac_cv_F77, $F77 mpif77)
+            AC_PATH_PROGS(lac_cv_F90, $F90 mpif90)
+        else
+            if test "$GLOBUS_CC" != "gcc"; then
+                AC_MSG_ERROR(vendorcc not supported on this platform)
+            fi
+
+            if test "$lac_cv_build_64bit" = "yes"; then
+                lac_CFLAGS="$lac_CFLAGS -m64"
+                lac_CXXFLAGS="$lac_CXXFLAGS -m64"
+                lac_LDFLAGS="$lac_LDFLAGS -m64"
+            else
+                lac_CFLAGS="$lac_CFLAGS -m32"
+                lac_CXXFLAGS="$lac_CXXFLAGS -m32"
+                lac_LDFLAGS="$lac_LDFLAGS -m32"
+            fi
+            AC_PATH_PROGS(lac_cv_CC, $CC gcc)
+            AC_PATH_PROGS(lac_cv_CXX, $CXX c++ g++)
+            AC_PATH_PROGS(lac_cv_F77, $F77 f77 g77)
+            AC_PATH_PROGS(lac_cv_F90, $F90 f90)
+        fi
+        CC="$lac_cv_CC"
+        ;;
     alpha*linux* )
         if test "$lac_cv_build_64bit" = "no"; then
             AC_MSG_ERROR(32 bits not supported on this platform)
@@ -1011,6 +1038,56 @@
         fi
         CC="$lac_cv_CC"
       ;;
+    x86_64-*-k*bsd*-gnu* )
+        if test "$GLOBUS_CC" = "mpicc"; then
+            AC_PATH_PROGS(lac_cv_CC,  $CC  mpicc)
+            AC_PATH_PROGS(lac_cv_CXX, $CXX mpicxx mpic++ mpiCC)
+            AC_PATH_PROGS(lac_cv_F77, $F77 mpif77)
+            AC_PATH_PROGS(lac_cv_F90, $F90 mpif90)
+        else
+            if test "$GLOBUS_CC" != "gcc"; then
+                AC_MSG_ERROR(vendorcc not supported on this platform)
+            fi
+
+            if test "$lac_cv_build_64bit" = "yes"; then
+                lac_CFLAGS="$lac_CFLAGS -m64"
+                lac_CXXFLAGS="$lac_CXXFLAGS -m64"
+                lac_LDFLAGS="$lac_LDFLAGS -m64"
+            else
+                lac_CFLAGS="$lac_CFLAGS -m32"
+                lac_CXXFLAGS="$lac_CXXFLAGS -m32"
+                lac_LDFLAGS="$lac_LDFLAGS -m32"
+            fi
+            AC_PATH_PROGS(lac_cv_CC, $CC gcc)
+            AC_PATH_PROGS(lac_cv_CXX, $CXX c++ g++)
+            AC_PATH_PROGS(lac_cv_F77, $F77 f77 g77)
+            AC_PATH_PROGS(lac_cv_F90, $F90 f90)
+        fi
+        CC="$lac_cv_CC"
+      ;;
+    *-*-k*bsd*-gnu* )
+        if test "$lac_cv_build_64bit" = "yes"; then
+                AC_MSG_ERROR(64 bits not supported on this platform)
+                exit 1
+        fi
+        
+        if test "$GLOBUS_CC" = "mpicc"; then
+            AC_PATH_PROGS(lac_cv_CC,  $CC  mpicc)
+            AC_PATH_PROGS(lac_cv_CXX, $CXX mpicxx mpic++ mpiCC)
+            AC_PATH_PROGS(lac_cv_F77, $F77 mpif77)
+            AC_PATH_PROGS(lac_cv_F90, $F90 mpif90)
+        else
+            if test "$GLOBUS_CC" != "gcc"; then
+                AC_MSG_ERROR(vendorcc not supported on this platform)
+            fi
+
+            AC_PATH_PROGS(lac_cv_CC, $CC gcc)
+            AC_PATH_PROGS(lac_cv_CXX, $CXX $CCC g++ gcc)
+            AC_PATH_PROGS(lac_cv_F77, $F77 g77 f77)
+            AC_PATH_PROGS(lac_cv_F90, $F90 f90)
+        fi
+        CC="$lac_cv_CC"
+      ;;
     * )
         dnl No 64bit support yet
         if test "$lac_cv_build_64bit" = "yes"; then
