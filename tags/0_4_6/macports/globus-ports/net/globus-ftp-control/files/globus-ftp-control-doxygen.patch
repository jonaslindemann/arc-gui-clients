diff -ur globus_ftp_control-2.11.orig/globus_ftp_control_data.c globus_ftp_control-2.11/globus_ftp_control_data.c
--- globus_ftp_control-2.11.orig/globus_ftp_control_data.c	2009-11-05 23:45:21.000000000 +0100
+++ globus_ftp_control-2.11/globus_ftp_control_data.c	2010-01-23 08:25:24.688529983 +0100
@@ -1000,6 +1000,13 @@
  * @param handle
  *        A pointer to a FTP control handle which is configured to
  *        create an incoming data connection.
+ *
+ * @param callback
+ *        This callback is called when the connection occurs.  This
+ *        parameter may be NULL.
+ *
+ * @param user_arg
+ *        The user argument passed to the connect callback.
  */
 globus_result_t
 globus_ftp_control_data_connect_read(
@@ -1108,7 +1115,7 @@
  * @param handle
  *        A pointer to a FTP control handle which is configured to
  *        create an outgoing data connection.
- * @param interface
+ * @param interface_addr
  *
  */
 globus_result_t
@@ -1192,13 +1199,6 @@
  *
  * @param user_arg
  *        The user argument passed to the connect callback.
- *
- * @param enqueue_func
- *        The function used to break up data over the stripes.  This
- *        parameter is ignored when in stream mode.
- *
- * @param enqueue_arg
- *        The user argument passed to the enqueue function.
  */
 globus_result_t
 globus_ftp_control_data_connect_write(
@@ -1804,7 +1804,7 @@
  *        store information about any channels added by this function.
  * @param num_channels
  *        The number of additional channels to add.
- * @param stripe
+ * @param stripe_ndx
  *        A integer identifying the stripe to add channels too. In the
  *        case of non-striped transfer this parameter will be ignored.
  */
@@ -1880,6 +1880,7 @@
  *
  * @param array_size
  *        The number of elements in count[].
+ * @param eof_message
  * @param cb
  *        The function to be called when the eof message has been called.
  * @param user_arg
@@ -2143,7 +2144,7 @@
  *        update information about any channels removed by this function.
  * @param num_channels
  *        The number of channels to remove.
- * @param stripe
+ * @param stripe_ndx
  *        A integer identifying the stripe to remove channels from. In the
  *        case of non-striped transfer this parameter will be ignored.
  */
@@ -2253,7 +2254,7 @@
  *        determine the host corresponding to "stripe" and number of
  *        channels corresponding to that host.
  * @param num_channels
- * @param stripe
+ * @param stripe_ndx
  *        A integer identifying the stripe for which to return the
  *        number of channels. In the case of non-striped transfer this
  *        parameter should be zero.
@@ -2340,7 +2341,7 @@
  *        channels corresponding to that host.
  * @param num_channels
  *
- * @param stripe
+ * @param stripe_ndx
  *        A integer identifying the stripe for which to return the
  *        number of channels. In the case of non-striped transfer this
  *        parameter should be zero.
@@ -3449,13 +3450,13 @@
 
 
 /**
- * Update the FTP control handle with the given socket buffer size
+ * Update the FTP control handle with the given socket buffer
  * information.
  *
  * @param handle
  *        A pointer to the FTP control handle to be updated
- * @param buffer_size
- *        Specifies the size of the socket buffer in bytes.
+ * @param tcp_buffer
+ *        A pointer to the socket buffer.
  *
  */
 globus_result_t
@@ -3646,7 +3647,8 @@
  * @param dcau
  *        A parameter specifying the data channel authentication
  *        mode. Possible values are No Authentication, Self
- *        Authentication and Subject-name authentication. */
+ *        Authentication and Subject-name authentication.
+ * @param delegated_credential_handle */
 globus_result_t
 globus_ftp_control_local_dcau(
     globus_ftp_control_handle_t *		handle,
@@ -5427,6 +5429,8 @@
  *        user calls globus_ftp_control_release_data_info().  The callback
  *        is passed all of the arguments passed to this function with the
  *        exception of data_info.
+ * @param callback_arg
+ *        User supplied argument to the callback function
  */
 globus_result_t
 globus_ftp_control_create_data_info(
@@ -5618,11 +5622,10 @@
  * @param stripe_ndx
  *        The index of the stripe on which the data will be sent.  The index
  *        of each stripe is determined by the call to local_spas or local_spor.
- * @param data_info
- *        In order to use this function the user must have a valid pointer
- *        to a globus_ftp_control_data_write_info_t structure.  The user should
- *        call globus_ftp_control_create_data_info() to populate a valid
- *        data_info structure.
+ * @param callback
+ *        The function to be called once the data has been sent
+ * @param callback_arg
+ *        User supplied argument to the callback function
  */
 globus_result_t
 globus_ftp_control_data_write_stripe(
diff -ur globus_ftp_control-2.11.orig/globus_ftp_control_server.c globus_ftp_control-2.11/globus_ftp_control_server.c
--- globus_ftp_control-2.11.orig/globus_ftp_control_server.c	2008-09-19 06:46:59.000000000 +0200
+++ globus_ftp_control-2.11/globus_ftp_control_server.c	2010-01-23 08:26:40.861279641 +0100
@@ -451,7 +451,7 @@
  *  client. The command structure is used as a convience to determine 
  *  what command the client issued.  This function parses a command
  *  string sent by a client and populates the command argument
- *  appropriatly. In the GSSAPI case it will also decode and unwrap
+ *  appropriately. In the GSSAPI case it will also decode and unwrap
  *  the command before parsing it.  
  *
  * @param command
@@ -792,7 +792,7 @@
  *  @param callback
  *         The user callback that will be called when the server
  *         structure is no longer listening.
- *  @param callback
+ *  @param callback_arg
  *         The user argument that is passed into callback.
  */
 
diff -ur globus_ftp_control-2.11.orig/globus_gridftp_protocol_extensions.doc globus_ftp_control-2.11/globus_gridftp_protocol_extensions.doc
--- globus_ftp_control-2.11.orig/globus_gridftp_protocol_extensions.doc	2002-04-15 09:02:09.000000000 +0200
+++ globus_ftp_control-2.11/globus_gridftp_protocol_extensions.doc	2010-01-23 08:26:00.137281403 +0100
@@ -1,8 +1,8 @@
 /**
 @anchor page_extensions
-@page extensions GridFTP: Protocol Extensions to FTP for the Grid
+@page globus_ftp_extensions GridFTP: Protocol Extensions to FTP for the Grid
 
-@subsection extensions_intro Introduction
+@section extensions_intro Introduction
 
 <p>
 This section defines extensions to the FTP specification STD 9, RFC
@@ -48,7 +48,7 @@
 
 <p>
 
-@subsection term Terminology
+@section term Terminology
 
 @par Parallel transfer
 From a single data server, splitting file data for transfer over multiple
@@ -71,7 +71,7 @@
 The protocol interpreter.  The user and server sides of the protocol
 have distinct roles implemented in a user-PI and a server-PI.
 
-@subsection Existing FTP Standards Used
+@section Existing FTP Standards Used
 
 - RFC 959, @ref rfc959 "FILE TRANSFER PROTOCOL (FTP)", J. Postel,
   R. Reynolds (October 1985)
@@ -135,7 +135,7 @@
 		- Restart of a stream mode transfer
 
 @anchor sec_SPAS
-@subsection SPAS Striped Passive (SPAS)
+@section SPAS Striped Passive (SPAS)
 
 This extension is used to establish a vector of data socket listeners for for a
 server with one or more stripes.  This command MUST be used in conjunction with
@@ -177,7 +177,7 @@
 OPTS command defined.
 
 @anchor sec_SPOR
-@subsection SPOR Striped Data Port (SPOR)
+@section SPOR Striped Data Port (SPOR)
 
 This extension is to be used as a complement to the SPAS command to
 implement striped third-party transfers. This command MUST always be used in
@@ -211,7 +211,7 @@
 OPTS command defined.
 
 @anchor sec_ERET
-@subsection ERET Extended Retrieve (ERET)
+@section ERET Extended Retrieve (ERET)
 
 The extended retrieve extension is used to request that a retrieve be
 done with some additional processing on the server. This command an
@@ -254,7 +254,7 @@
 <p>
 
 @anchor sec_ESTO
-@subsection ESTO Extended Store (ESTO)
+@section ESTO Extended Store (ESTO)
 
 The extended store extension is used to request that a store be done with some
 additional processing on the server. Arbitrary data processing algorithms may
@@ -290,7 +290,7 @@
 <p>
 
 @anchor sec_SBUF
-@subsection SBUF Set Buffer Size (SBUF)
+@section SBUF Set Buffer Size (SBUF)
 
 This extension adds the capability of a client to set the TCP buffer
 size for subsequent data connections to a value. This replaces the
@@ -323,7 +323,7 @@
 <p>
 
 @anchor sec_DCAU
-@subsection DCAU Data Channel Authentication (DCAU)
+@section DCAU Data Channel Authentication (DCAU)
 
 This extension provides a method for specifying the type of
 authentication to be performed on FTP data channels. This extension
@@ -366,7 +366,7 @@
 If the security handshake fails, the server should return the error
 response 432 (Data channel authentication failed).
 
-@subsection mode_e Extended Block Mode
+@section mode_e Extended Block Mode
 The striped and parallel data transfer methods described above require
 an extended transfer mode to support out-of-sequence data delivery,
 and partial data transmission per data connection. The extended block
@@ -462,7 +462,7 @@
 The 126 is an intermediate response to RETR command.  It has the following
 format.
 
-"126" <SP> 1*(count of data connections)
+126 <SP> 1*(count of data connections)
 
 Several "Count of data connections" can be in a single reply.  They
 correspond to the stripes returned in the response to the SPAS command.
@@ -587,7 +587,7 @@
 at the given timestamp. The meaning of the facts are
 
 - Timestamp - The time at which the server computed the performance
-  information. This is in seconds since the epoch ((00:00:00 UTC, January 1,
+  information. This is in seconds since the epoch (00:00:00 UTC, January 1,
   1970).
 - Stripe Index - the index (0-number of stripes on the STOR side of the
   transfer) which this marker pertains to.
@@ -605,7 +605,7 @@
 'Stripe Bytes Transferred' set to the total transfer size for that stripe.
 
 @anchor sec_OPTS
-@subsection opts Options to RETR
+@section opts Options to RETR
 
 The options described in this section provide a means to convey
 striping and transfer parallelism information to the server-DTP. For
@@ -639,7 +639,7 @@
 
 @par Partitioned
 A partitioned data layout is one where the data is distributed evenly
-on the destination data nodes.Only one contiguous section of data
+on the destination data nodes. Only one contiguous section of data
 is stored on each data node. A data node is defined here a single
 host-port mentioned in the SPOR command
 
@@ -666,7 +666,7 @@
 increase the number of parallel connections to per destination data
 node to at most this value.
 
-@subsection refs References
+@section refs References
 
 @anchor rfc959 [1]
 Postel, J. and Reynolds, J., "<a
@@ -689,7 +689,7 @@
 href="http://www.ietf.org/internet-drafts/draft-ietf-ftpext-mlst-13.txt">
 FTP Extensions</a>", IETF Draft, May 2001.
 
-@subsection appendix_i Appendix I: Implementation under GSI
+@section appendix_i Appendix I: Implementation under GSI
 
 <p>
 There are several security components in this document which are extensions
